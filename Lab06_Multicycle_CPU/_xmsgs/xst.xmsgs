<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 103 </arg>Connection to input port &apos;<arg fmt="%s" index="2">next_PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 102 </arg>Connection to output port &apos;<arg fmt="%s" index="2">PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 106 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 107 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_out_reg</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 108 </arg>Connection to input port &apos;<arg fmt="%s" index="2">PC_Src</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 110 </arg>Connection to input port &apos;<arg fmt="%s" index="2">PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 111 </arg>Connection to output port &apos;<arg fmt="%s" index="2">next_PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 115 </arg>Connection to input port &apos;<arg fmt="%s" index="2">PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 116 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 118 </arg>Connection to output port &apos;<arg fmt="%s" index="2">Mem_addr</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 125 </arg>Connection to input port &apos;<arg fmt="%s" index="2">addra</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 123 </arg>Connection to input port &apos;<arg fmt="%s" index="2">dina</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 124 </arg>Connection to output port &apos;<arg fmt="%s" index="2">douta</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 131 </arg>Connection to input port &apos;<arg fmt="%s" index="2">mem_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 134 </arg>Connection to output port &apos;<arg fmt="%s" index="2">data</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 141 </arg>Connection to output port &apos;<arg fmt="%s" index="2">r3_addr_mux</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 144 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 145 </arg>Connection to input port &apos;<arg fmt="%s" index="2">DMEM_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 147 </arg>Connection to output port &apos;<arg fmt="%s" index="2">reg_datain</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 156 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r3_addr</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 157 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r3_din</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 159 </arg>Connection to output port &apos;<arg fmt="%s" index="2">r1_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 160 </arg>Connection to output port &apos;<arg fmt="%s" index="2">r2_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 167 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r1_data</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 168 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r2_data</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 165 </arg>Connection to output port &apos;<arg fmt="%s" index="2">r1_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 166 </arg>Connection to output port &apos;<arg fmt="%s" index="2">r2_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 172 </arg>Connection to input port &apos;<arg fmt="%s" index="2">Immed</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 173 </arg>Connection to output port &apos;<arg fmt="%s" index="2">sext_Immed</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 177 </arg>Connection to input port &apos;<arg fmt="%s" index="2">curr_PC</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 178 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r1_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 179 </arg>Connection to output port &apos;<arg fmt="%s" index="2">alu_opa</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 182 </arg>Connection to input port &apos;<arg fmt="%s" index="2">ALU_SrcB</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 183 </arg>Connection to input port &apos;<arg fmt="%s" index="2">sext_Immed</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 184 </arg>Connection to input port &apos;<arg fmt="%s" index="2">r2_dout</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 185 </arg>Connection to output port &apos;<arg fmt="%s" index="2">alu_opb</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 189 </arg>Connection to input port &apos;<arg fmt="%s" index="2">ALUOp</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 190 </arg>Connection to input port &apos;<arg fmt="%s" index="2">funct</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 191 </arg>Connection to output port &apos;<arg fmt="%s" index="2">post_ALUOp</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 194 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_a</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 195 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_b</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 196 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_op</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 197 </arg>Connection to output port &apos;<arg fmt="%s" index="2">alu_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 205 </arg>Connection to input port &apos;<arg fmt="%s" index="2">alu_result</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 206 </arg>Connection to output port &apos;<arg fmt="%s" index="2">alu_out</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 222 </arg>Connection to output port &apos;<arg fmt="%s" index="2">ALUOp</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 225 </arg>Connection to output port &apos;<arg fmt="%s" index="2">PC_Src</arg>&apos; does not match port size
</msg>

<msg type="warning" file="HDLCompilers" num="261" delta="old" ><arg fmt="%s" index="1">&quot;top.v&quot; line 227 </arg>Connection to output port &apos;<arg fmt="%s" index="2">ALU_SrcB</arg>&apos; does not match port size
</msg>

<msg type="warning" file="Xst" num="905" delta="old" >&quot;<arg fmt="%s" index="1">regfile.v</arg>&quot; line <arg fmt="%d" index="2">17</arg>: One or more signals are missing in the sensitivity list of always block. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
<arg fmt="%s" index="3">&lt;R&gt;, &lt;r1_addr&gt;</arg>
</msg>

<msg type="warning" file="Xst" num="905" delta="old" >&quot;<arg fmt="%s" index="1">regfile.v</arg>&quot; line <arg fmt="%d" index="2">22</arg>: One or more signals are missing in the sensitivity list of always block. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
<arg fmt="%s" index="3">&lt;R&gt;, &lt;r2_addr&gt;</arg>
</msg>

<msg type="info" file="Xst" num="2679" delta="old" >Register &lt;<arg fmt="%s" index="1">i</arg>&gt; in unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; has a constant value of <arg fmt="%s" index="3">100000</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">PC&lt;27:0&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="info" file="Xst" num="738" delta="old" >HDL ADVISOR - <arg fmt="%d" index="1">1024</arg> flip-flops were inferred for signal &lt;<arg fmt="%s" index="2">R</arg>&gt;. You may be trying to describe a RAM in a way that is incompatible with block and distributed RAM resources available on Xilinx devices, or with a specific template that is not supported. Please review the Xilinx resources documentation and the XST user manual for coding guidelines. Taking advantage of RAM resources will lead to improved device usage and reduced synthesis time.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">32</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">alu_out</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="2371" delta="old" >HDL ADVISOR - Logic functions respectively driving the data and gate enable inputs of this latch share common terms. This situation will potentially lead to setup/hold violations and, as a result, to simulation problems. This situation may come from an incomplete case statement (all selector values are not covered). You should carefully review if it was in your intentions to describe such a latch.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">7</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">next_state</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="2371" delta="old" >HDL ADVISOR - Logic functions respectively driving the data and gate enable inputs of this latch share common terms. This situation will potentially lead to setup/hold violations and, as a result, to simulation problems. This situation may come from an incomplete case statement (all selector values are not covered). You should carefully review if it was in your intentions to describe such a latch.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">r2_addr</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">r1_addr</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">opcode</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">mem_data</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">Mem_addr</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">Jump_addr</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="1767" delta="old" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="warning" file="Xst" num="524" delta="old" >All outputs of the instance &lt;<arg fmt="%s" index="1">MemAddr</arg>&gt; of the block &lt;<arg fmt="%s" index="2">AddrMux</arg>&gt; are unconnected in block &lt;<arg fmt="%s" index="3">top</arg>&gt;.
This instance will be removed from the design along with all underlying logic
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_10</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_10&gt; &lt;R_4_10&gt; &lt;R_5_10&gt; &lt;R_6_10&gt; &lt;R_7_10&gt; &lt;R_8_10&gt; &lt;R_9_10&gt; &lt;R_10_10&gt; &lt;R_11_10&gt; &lt;R_12_10&gt; &lt;R_13_10&gt; &lt;R_14_10&gt; &lt;R_15_10&gt; &lt;R_16_10&gt; &lt;R_19_10&gt; &lt;R_17_10&gt; &lt;R_18_10&gt; &lt;R_20_10&gt; &lt;R_21_10&gt; &lt;R_22_10&gt; &lt;R_23_10&gt; &lt;R_24_10&gt; &lt;R_25_10&gt; &lt;R_26_10&gt; &lt;R_27_10&gt; &lt;R_28_10&gt; &lt;R_29_10&gt; &lt;R_30_10&gt; &lt;R_31_10&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_11</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_11&gt; &lt;R_4_11&gt; &lt;R_5_11&gt; &lt;R_6_11&gt; &lt;R_7_11&gt; &lt;R_8_11&gt; &lt;R_9_11&gt; &lt;R_10_11&gt; &lt;R_11_11&gt; &lt;R_12_11&gt; &lt;R_13_11&gt; &lt;R_14_11&gt; &lt;R_15_11&gt; &lt;R_16_11&gt; &lt;R_19_11&gt; &lt;R_17_11&gt; &lt;R_18_11&gt; &lt;R_20_11&gt; &lt;R_21_11&gt; &lt;R_22_11&gt; &lt;R_23_11&gt; &lt;R_24_11&gt; &lt;R_25_11&gt; &lt;R_26_11&gt; &lt;R_27_11&gt; &lt;R_28_11&gt; &lt;R_29_11&gt; &lt;R_30_11&gt; &lt;R_31_11&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_12</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_12&gt; &lt;R_4_12&gt; &lt;R_5_12&gt; &lt;R_6_12&gt; &lt;R_7_12&gt; &lt;R_8_12&gt; &lt;R_9_12&gt; &lt;R_10_12&gt; &lt;R_11_12&gt; &lt;R_12_12&gt; &lt;R_13_12&gt; &lt;R_14_12&gt; &lt;R_15_12&gt; &lt;R_16_12&gt; &lt;R_19_12&gt; &lt;R_17_12&gt; &lt;R_18_12&gt; &lt;R_20_12&gt; &lt;R_21_12&gt; &lt;R_22_12&gt; &lt;R_23_12&gt; &lt;R_24_12&gt; &lt;R_25_12&gt; &lt;R_26_12&gt; &lt;R_27_12&gt; &lt;R_28_12&gt; &lt;R_29_12&gt; &lt;R_30_12&gt; &lt;R_31_12&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_0&gt; &lt;R_4_0&gt; &lt;R_5_0&gt; &lt;R_6_0&gt; &lt;R_7_0&gt; &lt;R_8_0&gt; &lt;R_9_0&gt; &lt;R_10_0&gt; &lt;R_11_0&gt; &lt;R_12_0&gt; &lt;R_13_0&gt; &lt;R_14_0&gt; &lt;R_15_0&gt; &lt;R_16_0&gt; &lt;R_19_0&gt; &lt;R_17_0&gt; &lt;R_18_0&gt; &lt;R_20_0&gt; &lt;R_21_0&gt; &lt;R_22_0&gt; &lt;R_23_0&gt; &lt;R_24_0&gt; &lt;R_25_0&gt; &lt;R_26_0&gt; &lt;R_27_0&gt; &lt;R_28_0&gt; &lt;R_29_0&gt; &lt;R_30_0&gt; &lt;R_31_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_13</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_13&gt; &lt;R_4_13&gt; &lt;R_5_13&gt; &lt;R_6_13&gt; &lt;R_7_13&gt; &lt;R_8_13&gt; &lt;R_9_13&gt; &lt;R_10_13&gt; &lt;R_11_13&gt; &lt;R_12_13&gt; &lt;R_13_13&gt; &lt;R_14_13&gt; &lt;R_15_13&gt; &lt;R_16_13&gt; &lt;R_19_13&gt; &lt;R_17_13&gt; &lt;R_18_13&gt; &lt;R_20_13&gt; &lt;R_21_13&gt; &lt;R_22_13&gt; &lt;R_23_13&gt; &lt;R_24_13&gt; &lt;R_25_13&gt; &lt;R_26_13&gt; &lt;R_27_13&gt; &lt;R_28_13&gt; &lt;R_29_13&gt; &lt;R_30_13&gt; &lt;R_31_13&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_1&gt; &lt;R_4_1&gt; &lt;R_5_1&gt; &lt;R_6_1&gt; &lt;R_7_1&gt; &lt;R_8_1&gt; &lt;R_9_1&gt; &lt;R_10_1&gt; &lt;R_11_1&gt; &lt;R_12_1&gt; &lt;R_13_1&gt; &lt;R_14_1&gt; &lt;R_15_1&gt; &lt;R_16_1&gt; &lt;R_19_1&gt; &lt;R_17_1&gt; &lt;R_18_1&gt; &lt;R_20_1&gt; &lt;R_21_1&gt; &lt;R_22_1&gt; &lt;R_23_1&gt; &lt;R_24_1&gt; &lt;R_25_1&gt; &lt;R_26_1&gt; &lt;R_27_1&gt; &lt;R_28_1&gt; &lt;R_29_1&gt; &lt;R_30_1&gt; &lt;R_31_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_14</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_14&gt; &lt;R_4_14&gt; &lt;R_5_14&gt; &lt;R_6_14&gt; &lt;R_7_14&gt; &lt;R_8_14&gt; &lt;R_9_14&gt; &lt;R_10_14&gt; &lt;R_11_14&gt; &lt;R_12_14&gt; &lt;R_13_14&gt; &lt;R_14_14&gt; &lt;R_15_14&gt; &lt;R_16_14&gt; &lt;R_19_14&gt; &lt;R_17_14&gt; &lt;R_18_14&gt; &lt;R_20_14&gt; &lt;R_21_14&gt; &lt;R_22_14&gt; &lt;R_23_14&gt; &lt;R_24_14&gt; &lt;R_25_14&gt; &lt;R_26_14&gt; &lt;R_27_14&gt; &lt;R_28_14&gt; &lt;R_29_14&gt; &lt;R_30_14&gt; &lt;R_31_14&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_2&gt; &lt;R_4_2&gt; &lt;R_5_2&gt; &lt;R_6_2&gt; &lt;R_7_2&gt; &lt;R_8_2&gt; &lt;R_9_2&gt; &lt;R_10_2&gt; &lt;R_11_2&gt; &lt;R_12_2&gt; &lt;R_13_2&gt; &lt;R_14_2&gt; &lt;R_15_2&gt; &lt;R_16_2&gt; &lt;R_19_2&gt; &lt;R_17_2&gt; &lt;R_18_2&gt; &lt;R_20_2&gt; &lt;R_21_2&gt; &lt;R_22_2&gt; &lt;R_23_2&gt; &lt;R_24_2&gt; &lt;R_25_2&gt; &lt;R_26_2&gt; &lt;R_27_2&gt; &lt;R_28_2&gt; &lt;R_29_2&gt; &lt;R_30_2&gt; &lt;R_31_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_15</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_15&gt; &lt;R_4_15&gt; &lt;R_5_15&gt; &lt;R_6_15&gt; &lt;R_7_15&gt; &lt;R_8_15&gt; &lt;R_9_15&gt; &lt;R_10_15&gt; &lt;R_11_15&gt; &lt;R_12_15&gt; &lt;R_13_15&gt; &lt;R_14_15&gt; &lt;R_15_15&gt; &lt;R_16_15&gt; &lt;R_19_15&gt; &lt;R_17_15&gt; &lt;R_18_15&gt; &lt;R_20_15&gt; &lt;R_21_15&gt; &lt;R_22_15&gt; &lt;R_23_15&gt; &lt;R_24_15&gt; &lt;R_25_15&gt; &lt;R_26_15&gt; &lt;R_27_15&gt; &lt;R_28_15&gt; &lt;R_29_15&gt; &lt;R_30_15&gt; &lt;R_31_15&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_20</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_20&gt; &lt;R_4_20&gt; &lt;R_5_20&gt; &lt;R_6_20&gt; &lt;R_7_20&gt; &lt;R_8_20&gt; &lt;R_9_20&gt; &lt;R_10_20&gt; &lt;R_11_20&gt; &lt;R_12_20&gt; &lt;R_13_20&gt; &lt;R_14_20&gt; &lt;R_15_20&gt; &lt;R_16_20&gt; &lt;R_19_20&gt; &lt;R_17_20&gt; &lt;R_18_20&gt; &lt;R_20_20&gt; &lt;R_21_20&gt; &lt;R_22_20&gt; &lt;R_23_20&gt; &lt;R_24_20&gt; &lt;R_25_20&gt; &lt;R_26_20&gt; &lt;R_27_20&gt; &lt;R_28_20&gt; &lt;R_29_20&gt; &lt;R_30_20&gt; &lt;R_31_20&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_3</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_3&gt; &lt;R_4_3&gt; &lt;R_5_3&gt; &lt;R_6_3&gt; &lt;R_7_3&gt; &lt;R_8_3&gt; &lt;R_9_3&gt; &lt;R_10_3&gt; &lt;R_11_3&gt; &lt;R_12_3&gt; &lt;R_13_3&gt; &lt;R_14_3&gt; &lt;R_15_3&gt; &lt;R_16_3&gt; &lt;R_19_3&gt; &lt;R_17_3&gt; &lt;R_18_3&gt; &lt;R_20_3&gt; &lt;R_21_3&gt; &lt;R_22_3&gt; &lt;R_23_3&gt; &lt;R_24_3&gt; &lt;R_25_3&gt; &lt;R_26_3&gt; &lt;R_27_3&gt; &lt;R_28_3&gt; &lt;R_29_3&gt; &lt;R_30_3&gt; &lt;R_31_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_16</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_16&gt; &lt;R_4_16&gt; &lt;R_5_16&gt; &lt;R_6_16&gt; &lt;R_7_16&gt; &lt;R_8_16&gt; &lt;R_9_16&gt; &lt;R_10_16&gt; &lt;R_11_16&gt; &lt;R_12_16&gt; &lt;R_13_16&gt; &lt;R_14_16&gt; &lt;R_15_16&gt; &lt;R_16_16&gt; &lt;R_19_16&gt; &lt;R_17_16&gt; &lt;R_18_16&gt; &lt;R_20_16&gt; &lt;R_21_16&gt; &lt;R_22_16&gt; &lt;R_23_16&gt; &lt;R_24_16&gt; &lt;R_25_16&gt; &lt;R_26_16&gt; &lt;R_27_16&gt; &lt;R_28_16&gt; &lt;R_29_16&gt; &lt;R_30_16&gt; &lt;R_31_16&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_21</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_21&gt; &lt;R_4_21&gt; &lt;R_5_21&gt; &lt;R_6_21&gt; &lt;R_7_21&gt; &lt;R_8_21&gt; &lt;R_9_21&gt; &lt;R_10_21&gt; &lt;R_11_21&gt; &lt;R_12_21&gt; &lt;R_13_21&gt; &lt;R_14_21&gt; &lt;R_15_21&gt; &lt;R_16_21&gt; &lt;R_19_21&gt; &lt;R_17_21&gt; &lt;R_18_21&gt; &lt;R_20_21&gt; &lt;R_21_21&gt; &lt;R_22_21&gt; &lt;R_23_21&gt; &lt;R_24_21&gt; &lt;R_25_21&gt; &lt;R_26_21&gt; &lt;R_27_21&gt; &lt;R_28_21&gt; &lt;R_29_21&gt; &lt;R_30_21&gt; &lt;R_31_21&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_4&gt; &lt;R_4_4&gt; &lt;R_5_4&gt; &lt;R_6_4&gt; &lt;R_7_4&gt; &lt;R_8_4&gt; &lt;R_9_4&gt; &lt;R_10_4&gt; &lt;R_11_4&gt; &lt;R_12_4&gt; &lt;R_13_4&gt; &lt;R_14_4&gt; &lt;R_15_4&gt; &lt;R_16_4&gt; &lt;R_19_4&gt; &lt;R_17_4&gt; &lt;R_18_4&gt; &lt;R_20_4&gt; &lt;R_21_4&gt; &lt;R_22_4&gt; &lt;R_23_4&gt; &lt;R_24_4&gt; &lt;R_25_4&gt; &lt;R_26_4&gt; &lt;R_27_4&gt; &lt;R_28_4&gt; &lt;R_29_4&gt; &lt;R_30_4&gt; &lt;R_31_4&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_17&gt; &lt;R_4_17&gt; &lt;R_5_17&gt; &lt;R_6_17&gt; &lt;R_7_17&gt; &lt;R_8_17&gt; &lt;R_9_17&gt; &lt;R_10_17&gt; &lt;R_11_17&gt; &lt;R_12_17&gt; &lt;R_13_17&gt; &lt;R_14_17&gt; &lt;R_15_17&gt; &lt;R_16_17&gt; &lt;R_19_17&gt; &lt;R_17_17&gt; &lt;R_18_17&gt; &lt;R_20_17&gt; &lt;R_21_17&gt; &lt;R_22_17&gt; &lt;R_23_17&gt; &lt;R_24_17&gt; &lt;R_25_17&gt; &lt;R_26_17&gt; &lt;R_27_17&gt; &lt;R_28_17&gt; &lt;R_29_17&gt; &lt;R_30_17&gt; &lt;R_31_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_22</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_22&gt; &lt;R_4_22&gt; &lt;R_5_22&gt; &lt;R_6_22&gt; &lt;R_7_22&gt; &lt;R_8_22&gt; &lt;R_9_22&gt; &lt;R_10_22&gt; &lt;R_11_22&gt; &lt;R_12_22&gt; &lt;R_13_22&gt; &lt;R_14_22&gt; &lt;R_15_22&gt; &lt;R_16_22&gt; &lt;R_19_22&gt; &lt;R_17_22&gt; &lt;R_18_22&gt; &lt;R_20_22&gt; &lt;R_21_22&gt; &lt;R_22_22&gt; &lt;R_23_22&gt; &lt;R_24_22&gt; &lt;R_25_22&gt; &lt;R_26_22&gt; &lt;R_27_22&gt; &lt;R_28_22&gt; &lt;R_29_22&gt; &lt;R_30_22&gt; &lt;R_31_22&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_5&gt; &lt;R_4_5&gt; &lt;R_5_5&gt; &lt;R_6_5&gt; &lt;R_7_5&gt; &lt;R_8_5&gt; &lt;R_9_5&gt; &lt;R_10_5&gt; &lt;R_11_5&gt; &lt;R_12_5&gt; &lt;R_13_5&gt; &lt;R_14_5&gt; &lt;R_15_5&gt; &lt;R_16_5&gt; &lt;R_19_5&gt; &lt;R_17_5&gt; &lt;R_18_5&gt; &lt;R_20_5&gt; &lt;R_21_5&gt; &lt;R_22_5&gt; &lt;R_23_5&gt; &lt;R_24_5&gt; &lt;R_25_5&gt; &lt;R_26_5&gt; &lt;R_27_5&gt; &lt;R_28_5&gt; &lt;R_29_5&gt; &lt;R_30_5&gt; &lt;R_31_5&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_18</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_18&gt; &lt;R_4_18&gt; &lt;R_5_18&gt; &lt;R_6_18&gt; &lt;R_7_18&gt; &lt;R_8_18&gt; &lt;R_9_18&gt; &lt;R_10_18&gt; &lt;R_11_18&gt; &lt;R_12_18&gt; &lt;R_13_18&gt; &lt;R_14_18&gt; &lt;R_15_18&gt; &lt;R_16_18&gt; &lt;R_19_18&gt; &lt;R_17_18&gt; &lt;R_18_18&gt; &lt;R_20_18&gt; &lt;R_21_18&gt; &lt;R_22_18&gt; &lt;R_23_18&gt; &lt;R_24_18&gt; &lt;R_25_18&gt; &lt;R_26_18&gt; &lt;R_27_18&gt; &lt;R_28_18&gt; &lt;R_29_18&gt; &lt;R_30_18&gt; &lt;R_31_18&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_23</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_23&gt; &lt;R_4_23&gt; &lt;R_5_23&gt; &lt;R_6_23&gt; &lt;R_7_23&gt; &lt;R_8_23&gt; &lt;R_9_23&gt; &lt;R_10_23&gt; &lt;R_11_23&gt; &lt;R_12_23&gt; &lt;R_13_23&gt; &lt;R_14_23&gt; &lt;R_15_23&gt; &lt;R_16_23&gt; &lt;R_19_23&gt; &lt;R_17_23&gt; &lt;R_18_23&gt; &lt;R_20_23&gt; &lt;R_21_23&gt; &lt;R_22_23&gt; &lt;R_23_23&gt; &lt;R_24_23&gt; &lt;R_25_23&gt; &lt;R_26_23&gt; &lt;R_27_23&gt; &lt;R_28_23&gt; &lt;R_29_23&gt; &lt;R_30_23&gt; &lt;R_31_23&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_6&gt; &lt;R_4_6&gt; &lt;R_5_6&gt; &lt;R_6_6&gt; &lt;R_7_6&gt; &lt;R_8_6&gt; &lt;R_9_6&gt; &lt;R_10_6&gt; &lt;R_11_6&gt; &lt;R_12_6&gt; &lt;R_13_6&gt; &lt;R_14_6&gt; &lt;R_15_6&gt; &lt;R_16_6&gt; &lt;R_19_6&gt; &lt;R_17_6&gt; &lt;R_18_6&gt; &lt;R_20_6&gt; &lt;R_21_6&gt; &lt;R_22_6&gt; &lt;R_23_6&gt; &lt;R_24_6&gt; &lt;R_25_6&gt; &lt;R_26_6&gt; &lt;R_27_6&gt; &lt;R_28_6&gt; &lt;R_29_6&gt; &lt;R_30_6&gt; &lt;R_31_6&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_19</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_19&gt; &lt;R_4_19&gt; &lt;R_5_19&gt; &lt;R_6_19&gt; &lt;R_7_19&gt; &lt;R_8_19&gt; &lt;R_9_19&gt; &lt;R_10_19&gt; &lt;R_11_19&gt; &lt;R_12_19&gt; &lt;R_13_19&gt; &lt;R_14_19&gt; &lt;R_15_19&gt; &lt;R_16_19&gt; &lt;R_19_19&gt; &lt;R_17_19&gt; &lt;R_18_19&gt; &lt;R_20_19&gt; &lt;R_21_19&gt; &lt;R_22_19&gt; &lt;R_23_19&gt; &lt;R_24_19&gt; &lt;R_25_19&gt; &lt;R_26_19&gt; &lt;R_27_19&gt; &lt;R_28_19&gt; &lt;R_29_19&gt; &lt;R_30_19&gt; &lt;R_31_19&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_24</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_24&gt; &lt;R_4_24&gt; &lt;R_5_24&gt; &lt;R_6_24&gt; &lt;R_7_24&gt; &lt;R_8_24&gt; &lt;R_9_24&gt; &lt;R_10_24&gt; &lt;R_11_24&gt; &lt;R_12_24&gt; &lt;R_13_24&gt; &lt;R_14_24&gt; &lt;R_15_24&gt; &lt;R_16_24&gt; &lt;R_19_24&gt; &lt;R_17_24&gt; &lt;R_18_24&gt; &lt;R_20_24&gt; &lt;R_21_24&gt; &lt;R_22_24&gt; &lt;R_23_24&gt; &lt;R_24_24&gt; &lt;R_25_24&gt; &lt;R_26_24&gt; &lt;R_27_24&gt; &lt;R_28_24&gt; &lt;R_29_24&gt; &lt;R_30_24&gt; &lt;R_31_24&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_7&gt; &lt;R_4_7&gt; &lt;R_5_7&gt; &lt;R_6_7&gt; &lt;R_7_7&gt; &lt;R_8_7&gt; &lt;R_9_7&gt; &lt;R_10_7&gt; &lt;R_11_7&gt; &lt;R_12_7&gt; &lt;R_13_7&gt; &lt;R_14_7&gt; &lt;R_15_7&gt; &lt;R_16_7&gt; &lt;R_19_7&gt; &lt;R_17_7&gt; &lt;R_18_7&gt; &lt;R_20_7&gt; &lt;R_21_7&gt; &lt;R_22_7&gt; &lt;R_23_7&gt; &lt;R_24_7&gt; &lt;R_25_7&gt; &lt;R_26_7&gt; &lt;R_27_7&gt; &lt;R_28_7&gt; &lt;R_29_7&gt; &lt;R_30_7&gt; &lt;R_31_7&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_25</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_25&gt; &lt;R_4_25&gt; &lt;R_5_25&gt; &lt;R_6_25&gt; &lt;R_7_25&gt; &lt;R_8_25&gt; &lt;R_9_25&gt; &lt;R_10_25&gt; &lt;R_11_25&gt; &lt;R_12_25&gt; &lt;R_13_25&gt; &lt;R_14_25&gt; &lt;R_15_25&gt; &lt;R_16_25&gt; &lt;R_19_25&gt; &lt;R_17_25&gt; &lt;R_18_25&gt; &lt;R_20_25&gt; &lt;R_21_25&gt; &lt;R_22_25&gt; &lt;R_23_25&gt; &lt;R_24_25&gt; &lt;R_25_25&gt; &lt;R_26_25&gt; &lt;R_27_25&gt; &lt;R_28_25&gt; &lt;R_29_25&gt; &lt;R_30_25&gt; &lt;R_31_25&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_30</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_30&gt; &lt;R_4_30&gt; &lt;R_5_30&gt; &lt;R_6_30&gt; &lt;R_7_30&gt; &lt;R_8_30&gt; &lt;R_9_30&gt; &lt;R_10_30&gt; &lt;R_11_30&gt; &lt;R_12_30&gt; &lt;R_13_30&gt; &lt;R_14_30&gt; &lt;R_15_30&gt; &lt;R_16_30&gt; &lt;R_19_30&gt; &lt;R_17_30&gt; &lt;R_18_30&gt; &lt;R_20_30&gt; &lt;R_21_30&gt; &lt;R_22_30&gt; &lt;R_23_30&gt; &lt;R_24_30&gt; &lt;R_25_30&gt; &lt;R_26_30&gt; &lt;R_27_30&gt; &lt;R_28_30&gt; &lt;R_29_30&gt; &lt;R_30_30&gt; &lt;R_31_30&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_8</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_8&gt; &lt;R_4_8&gt; &lt;R_5_8&gt; &lt;R_6_8&gt; &lt;R_7_8&gt; &lt;R_8_8&gt; &lt;R_9_8&gt; &lt;R_10_8&gt; &lt;R_11_8&gt; &lt;R_12_8&gt; &lt;R_13_8&gt; &lt;R_14_8&gt; &lt;R_15_8&gt; &lt;R_16_8&gt; &lt;R_19_8&gt; &lt;R_17_8&gt; &lt;R_18_8&gt; &lt;R_20_8&gt; &lt;R_21_8&gt; &lt;R_22_8&gt; &lt;R_23_8&gt; &lt;R_24_8&gt; &lt;R_25_8&gt; &lt;R_26_8&gt; &lt;R_27_8&gt; &lt;R_28_8&gt; &lt;R_29_8&gt; &lt;R_30_8&gt; &lt;R_31_8&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_26</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_26&gt; &lt;R_4_26&gt; &lt;R_5_26&gt; &lt;R_6_26&gt; &lt;R_7_26&gt; &lt;R_8_26&gt; &lt;R_9_26&gt; &lt;R_10_26&gt; &lt;R_11_26&gt; &lt;R_12_26&gt; &lt;R_13_26&gt; &lt;R_14_26&gt; &lt;R_15_26&gt; &lt;R_16_26&gt; &lt;R_19_26&gt; &lt;R_17_26&gt; &lt;R_18_26&gt; &lt;R_20_26&gt; &lt;R_21_26&gt; &lt;R_22_26&gt; &lt;R_23_26&gt; &lt;R_24_26&gt; &lt;R_25_26&gt; &lt;R_26_26&gt; &lt;R_27_26&gt; &lt;R_28_26&gt; &lt;R_29_26&gt; &lt;R_30_26&gt; &lt;R_31_26&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_31</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_31&gt; &lt;R_4_31&gt; &lt;R_5_31&gt; &lt;R_6_31&gt; &lt;R_7_31&gt; &lt;R_8_31&gt; &lt;R_9_31&gt; &lt;R_10_31&gt; &lt;R_11_31&gt; &lt;R_12_31&gt; &lt;R_13_31&gt; &lt;R_14_31&gt; &lt;R_15_31&gt; &lt;R_16_31&gt; &lt;R_19_31&gt; &lt;R_17_31&gt; &lt;R_18_31&gt; &lt;R_20_31&gt; &lt;R_21_31&gt; &lt;R_22_31&gt; &lt;R_23_31&gt; &lt;R_24_31&gt; &lt;R_25_31&gt; &lt;R_26_31&gt; &lt;R_27_31&gt; &lt;R_28_31&gt; &lt;R_29_31&gt; &lt;R_30_31&gt; &lt;R_31_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_9</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_9&gt; &lt;R_4_9&gt; &lt;R_5_9&gt; &lt;R_6_9&gt; &lt;R_7_9&gt; &lt;R_8_9&gt; &lt;R_9_9&gt; &lt;R_10_9&gt; &lt;R_11_9&gt; &lt;R_12_9&gt; &lt;R_13_9&gt; &lt;R_14_9&gt; &lt;R_15_9&gt; &lt;R_16_9&gt; &lt;R_19_9&gt; &lt;R_17_9&gt; &lt;R_18_9&gt; &lt;R_20_9&gt; &lt;R_21_9&gt; &lt;R_22_9&gt; &lt;R_23_9&gt; &lt;R_24_9&gt; &lt;R_25_9&gt; &lt;R_26_9&gt; &lt;R_27_9&gt; &lt;R_28_9&gt; &lt;R_29_9&gt; &lt;R_30_9&gt; &lt;R_31_9&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_27</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_27&gt; &lt;R_4_27&gt; &lt;R_5_27&gt; &lt;R_6_27&gt; &lt;R_7_27&gt; &lt;R_8_27&gt; &lt;R_9_27&gt; &lt;R_10_27&gt; &lt;R_11_27&gt; &lt;R_12_27&gt; &lt;R_13_27&gt; &lt;R_14_27&gt; &lt;R_15_27&gt; &lt;R_16_27&gt; &lt;R_19_27&gt; &lt;R_17_27&gt; &lt;R_18_27&gt; &lt;R_20_27&gt; &lt;R_21_27&gt; &lt;R_22_27&gt; &lt;R_23_27&gt; &lt;R_24_27&gt; &lt;R_25_27&gt; &lt;R_26_27&gt; &lt;R_27_27&gt; &lt;R_28_27&gt; &lt;R_29_27&gt; &lt;R_30_27&gt; &lt;R_31_27&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_28</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_28&gt; &lt;R_4_28&gt; &lt;R_5_28&gt; &lt;R_6_28&gt; &lt;R_7_28&gt; &lt;R_8_28&gt; &lt;R_9_28&gt; &lt;R_10_28&gt; &lt;R_11_28&gt; &lt;R_12_28&gt; &lt;R_13_28&gt; &lt;R_14_28&gt; &lt;R_15_28&gt; &lt;R_16_28&gt; &lt;R_19_28&gt; &lt;R_17_28&gt; &lt;R_18_28&gt; &lt;R_20_28&gt; &lt;R_21_28&gt; &lt;R_22_28&gt; &lt;R_23_28&gt; &lt;R_24_28&gt; &lt;R_25_28&gt; &lt;R_26_28&gt; &lt;R_27_28&gt; &lt;R_28_28&gt; &lt;R_29_28&gt; &lt;R_30_28&gt; &lt;R_31_28&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_29</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">RegFile</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">29 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_29&gt; &lt;R_4_29&gt; &lt;R_5_29&gt; &lt;R_6_29&gt; &lt;R_7_29&gt; &lt;R_8_29&gt; &lt;R_9_29&gt; &lt;R_10_29&gt; &lt;R_11_29&gt; &lt;R_12_29&gt; &lt;R_13_29&gt; &lt;R_14_29&gt; &lt;R_15_29&gt; &lt;R_16_29&gt; &lt;R_19_29&gt; &lt;R_17_29&gt; &lt;R_18_29&gt; &lt;R_20_29&gt; &lt;R_21_29&gt; &lt;R_22_29&gt; &lt;R_23_29&gt; &lt;R_24_29&gt; &lt;R_25_29&gt; &lt;R_26_29&gt; &lt;R_27_29&gt; &lt;R_28_29&gt; &lt;R_29_29&gt; &lt;R_30_29&gt; &lt;R_31_29&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_16</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">20</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">21</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">22</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">23</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">24</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">25</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">26</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">27</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">28</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">29</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">30</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">31</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">state</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">state</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">state</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">4</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">5</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">6</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">Branch</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">FSM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">Branch_gz</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">FSM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">Branch_ne</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">FSM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_1_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">1</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">2</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">3</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">4</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">5</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">6</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">7</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">8</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">9</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">10</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">11</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">12</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">13</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">14</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">15</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">16</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">17</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">18</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">19</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_16</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">InstrData</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_16</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_0_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_16</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_2_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">RegFile</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">PCReg</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r1_dout_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">r2_dout_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">reg_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">alu_out_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ALURESULT</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">PC_Src_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">FSM</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">ALUOp_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">FSM</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="old" >Latch &lt;<arg fmt="%s" index="1">0</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">0</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1290" delta="old" >Hierarchical block &lt;<arg fmt="%s" index="1">RegMux</arg>&gt; is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
It will be removed from the design.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">RegDst</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">FSM</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">PC_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">PCModule</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;PC_2&gt; &lt;PC_3&gt; &lt;PC_4&gt; &lt;PC_5&gt; &lt;PC_6&gt; &lt;PC_7&gt; &lt;PC_8&gt; &lt;PC_9&gt; &lt;PC_10&gt; &lt;PC_11&gt; &lt;PC_12&gt; &lt;PC_13&gt; &lt;PC_14&gt; &lt;PC_15&gt; &lt;PC_16&gt; &lt;PC_17&gt; &lt;PC_18&gt; &lt;PC_19&gt; &lt;PC_20&gt; &lt;PC_21&gt; &lt;PC_22&gt; &lt;PC_23&gt; &lt;PC_24&gt; &lt;PC_25&gt; &lt;PC_26&gt; &lt;PC_27&gt; &lt;PC_28&gt; &lt;PC_29&gt; &lt;PC_30&gt; &lt;PC_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">data_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">State_Reg</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;data_2&gt; &lt;data_3&gt; &lt;data_4&gt; &lt;data_5&gt; &lt;data_6&gt; &lt;data_7&gt; &lt;data_8&gt; &lt;data_9&gt; &lt;data_10&gt; &lt;data_11&gt; &lt;data_12&gt; &lt;data_13&gt; &lt;data_14&gt; &lt;data_15&gt; &lt;data_16&gt; &lt;data_17&gt; &lt;data_18&gt; &lt;data_19&gt; &lt;data_20&gt; &lt;data_21&gt; &lt;data_22&gt; &lt;data_23&gt; &lt;data_24&gt; &lt;data_25&gt; &lt;data_26&gt; &lt;data_27&gt; &lt;data_28&gt; &lt;data_29&gt; &lt;data_30&gt; &lt;data_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">instruction_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">State_Reg</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;instruction_2&gt; &lt;instruction_3&gt; &lt;instruction_4&gt; &lt;instruction_5&gt; &lt;instruction_6&gt; &lt;instruction_7&gt; &lt;instruction_8&gt; &lt;instruction_9&gt; &lt;instruction_10&gt; &lt;instruction_11&gt; &lt;instruction_12&gt; &lt;instruction_13&gt; &lt;instruction_14&gt; &lt;instruction_15&gt; &lt;instruction_16&gt; &lt;instruction_17&gt; &lt;instruction_18&gt; &lt;instruction_19&gt; &lt;instruction_20&gt; &lt;instruction_21&gt; &lt;instruction_22&gt; &lt;instruction_23&gt; &lt;instruction_24&gt; &lt;instruction_25&gt; &lt;instruction_26&gt; &lt;instruction_27&gt; &lt;instruction_28&gt; &lt;instruction_29&gt; &lt;instruction_30&gt; &lt;instruction_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_11_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_11_2&gt; &lt;R_11_3&gt; &lt;R_11_4&gt; &lt;R_11_5&gt; &lt;R_11_6&gt; &lt;R_11_7&gt; &lt;R_11_8&gt; &lt;R_11_9&gt; &lt;R_11_10&gt; &lt;R_11_11&gt; &lt;R_11_12&gt; &lt;R_11_13&gt; &lt;R_11_14&gt; &lt;R_11_15&gt; &lt;R_11_16&gt; &lt;R_11_17&gt; &lt;R_11_18&gt; &lt;R_11_19&gt; &lt;R_11_20&gt; &lt;R_11_21&gt; &lt;R_11_22&gt; &lt;R_11_23&gt; &lt;R_11_24&gt; &lt;R_11_25&gt; &lt;R_11_26&gt; &lt;R_11_27&gt; &lt;R_11_28&gt; &lt;R_11_29&gt; &lt;R_11_30&gt; &lt;R_11_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_9_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_9_2&gt; &lt;R_9_3&gt; &lt;R_9_4&gt; &lt;R_9_5&gt; &lt;R_9_6&gt; &lt;R_9_7&gt; &lt;R_9_8&gt; &lt;R_9_9&gt; &lt;R_9_10&gt; &lt;R_9_11&gt; &lt;R_9_12&gt; &lt;R_9_13&gt; &lt;R_9_14&gt; &lt;R_9_15&gt; &lt;R_9_16&gt; &lt;R_9_17&gt; &lt;R_9_18&gt; &lt;R_9_19&gt; &lt;R_9_20&gt; &lt;R_9_21&gt; &lt;R_9_22&gt; &lt;R_9_23&gt; &lt;R_9_24&gt; &lt;R_9_25&gt; &lt;R_9_26&gt; &lt;R_9_27&gt; &lt;R_9_28&gt; &lt;R_9_29&gt; &lt;R_9_30&gt; &lt;R_9_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_28_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_28_2&gt; &lt;R_28_3&gt; &lt;R_28_4&gt; &lt;R_28_5&gt; &lt;R_28_6&gt; &lt;R_28_7&gt; &lt;R_28_8&gt; &lt;R_28_9&gt; &lt;R_28_10&gt; &lt;R_28_11&gt; &lt;R_28_12&gt; &lt;R_28_13&gt; &lt;R_28_14&gt; &lt;R_28_15&gt; &lt;R_28_16&gt; &lt;R_28_17&gt; &lt;R_28_18&gt; &lt;R_28_19&gt; &lt;R_28_20&gt; &lt;R_28_21&gt; &lt;R_28_22&gt; &lt;R_28_23&gt; &lt;R_28_24&gt; &lt;R_28_25&gt; &lt;R_28_26&gt; &lt;R_28_27&gt; &lt;R_28_28&gt; &lt;R_28_29&gt; &lt;R_28_30&gt; &lt;R_28_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_19_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_19_2&gt; &lt;R_19_3&gt; &lt;R_19_4&gt; &lt;R_19_5&gt; &lt;R_19_6&gt; &lt;R_19_7&gt; &lt;R_19_8&gt; &lt;R_19_9&gt; &lt;R_19_10&gt; &lt;R_19_11&gt; &lt;R_19_12&gt; &lt;R_19_13&gt; &lt;R_19_14&gt; &lt;R_19_15&gt; &lt;R_19_16&gt; &lt;R_19_17&gt; &lt;R_19_18&gt; &lt;R_19_19&gt; &lt;R_19_20&gt; &lt;R_19_21&gt; &lt;R_19_22&gt; &lt;R_19_23&gt; &lt;R_19_24&gt; &lt;R_19_25&gt; &lt;R_19_26&gt; &lt;R_19_27&gt; &lt;R_19_28&gt; &lt;R_19_29&gt; &lt;R_19_30&gt; &lt;R_19_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_24_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_24_2&gt; &lt;R_24_3&gt; &lt;R_24_4&gt; &lt;R_24_5&gt; &lt;R_24_6&gt; &lt;R_24_7&gt; &lt;R_24_8&gt; &lt;R_24_9&gt; &lt;R_24_10&gt; &lt;R_24_11&gt; &lt;R_24_12&gt; &lt;R_24_13&gt; &lt;R_24_14&gt; &lt;R_24_15&gt; &lt;R_24_16&gt; &lt;R_24_17&gt; &lt;R_24_18&gt; &lt;R_24_19&gt; &lt;R_24_20&gt; &lt;R_24_21&gt; &lt;R_24_22&gt; &lt;R_24_23&gt; &lt;R_24_24&gt; &lt;R_24_25&gt; &lt;R_24_26&gt; &lt;R_24_27&gt; &lt;R_24_28&gt; &lt;R_24_29&gt; &lt;R_24_30&gt; &lt;R_24_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_4_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_4_2&gt; &lt;R_4_3&gt; &lt;R_4_4&gt; &lt;R_4_5&gt; &lt;R_4_6&gt; &lt;R_4_7&gt; &lt;R_4_8&gt; &lt;R_4_9&gt; &lt;R_4_10&gt; &lt;R_4_11&gt; &lt;R_4_12&gt; &lt;R_4_13&gt; &lt;R_4_14&gt; &lt;R_4_15&gt; &lt;R_4_16&gt; &lt;R_4_17&gt; &lt;R_4_18&gt; &lt;R_4_19&gt; &lt;R_4_20&gt; &lt;R_4_21&gt; &lt;R_4_22&gt; &lt;R_4_23&gt; &lt;R_4_24&gt; &lt;R_4_25&gt; &lt;R_4_26&gt; &lt;R_4_27&gt; &lt;R_4_28&gt; &lt;R_4_29&gt; &lt;R_4_30&gt; &lt;R_4_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_0_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_0_2&gt; &lt;R_0_3&gt; &lt;R_0_4&gt; &lt;R_0_5&gt; &lt;R_0_6&gt; &lt;R_0_7&gt; &lt;R_0_8&gt; &lt;R_0_9&gt; &lt;R_0_10&gt; &lt;R_0_11&gt; &lt;R_0_12&gt; &lt;R_0_13&gt; &lt;R_0_14&gt; &lt;R_0_15&gt; &lt;R_0_16&gt; &lt;R_0_17&gt; &lt;R_0_18&gt; &lt;R_0_19&gt; &lt;R_0_20&gt; &lt;R_0_21&gt; &lt;R_0_22&gt; &lt;R_0_23&gt; &lt;R_0_24&gt; &lt;R_0_25&gt; &lt;R_0_26&gt; &lt;R_0_27&gt; &lt;R_0_28&gt; &lt;R_0_29&gt; &lt;R_0_30&gt; &lt;R_0_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_14_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_14_2&gt; &lt;R_14_3&gt; &lt;R_14_4&gt; &lt;R_14_5&gt; &lt;R_14_6&gt; &lt;R_14_7&gt; &lt;R_14_8&gt; &lt;R_14_9&gt; &lt;R_14_10&gt; &lt;R_14_11&gt; &lt;R_14_12&gt; &lt;R_14_13&gt; &lt;R_14_14&gt; &lt;R_14_15&gt; &lt;R_14_16&gt; &lt;R_14_17&gt; &lt;R_14_18&gt; &lt;R_14_19&gt; &lt;R_14_20&gt; &lt;R_14_21&gt; &lt;R_14_22&gt; &lt;R_14_23&gt; &lt;R_14_24&gt; &lt;R_14_25&gt; &lt;R_14_26&gt; &lt;R_14_27&gt; &lt;R_14_28&gt; &lt;R_14_29&gt; &lt;R_14_30&gt; &lt;R_14_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_10_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_10_2&gt; &lt;R_10_3&gt; &lt;R_10_4&gt; &lt;R_10_5&gt; &lt;R_10_6&gt; &lt;R_10_7&gt; &lt;R_10_8&gt; &lt;R_10_9&gt; &lt;R_10_10&gt; &lt;R_10_11&gt; &lt;R_10_12&gt; &lt;R_10_13&gt; &lt;R_10_14&gt; &lt;R_10_15&gt; &lt;R_10_16&gt; &lt;R_10_17&gt; &lt;R_10_18&gt; &lt;R_10_19&gt; &lt;R_10_20&gt; &lt;R_10_21&gt; &lt;R_10_22&gt; &lt;R_10_23&gt; &lt;R_10_24&gt; &lt;R_10_25&gt; &lt;R_10_26&gt; &lt;R_10_27&gt; &lt;R_10_28&gt; &lt;R_10_29&gt; &lt;R_10_30&gt; &lt;R_10_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_27_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_27_2&gt; &lt;R_27_3&gt; &lt;R_27_4&gt; &lt;R_27_5&gt; &lt;R_27_6&gt; &lt;R_27_7&gt; &lt;R_27_8&gt; &lt;R_27_9&gt; &lt;R_27_10&gt; &lt;R_27_11&gt; &lt;R_27_12&gt; &lt;R_27_13&gt; &lt;R_27_14&gt; &lt;R_27_15&gt; &lt;R_27_16&gt; &lt;R_27_17&gt; &lt;R_27_18&gt; &lt;R_27_19&gt; &lt;R_27_20&gt; &lt;R_27_21&gt; &lt;R_27_22&gt; &lt;R_27_23&gt; &lt;R_27_24&gt; &lt;R_27_25&gt; &lt;R_27_26&gt; &lt;R_27_27&gt; &lt;R_27_28&gt; &lt;R_27_29&gt; &lt;R_27_30&gt; &lt;R_27_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_3_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_3_2&gt; &lt;R_3_3&gt; &lt;R_3_4&gt; &lt;R_3_5&gt; &lt;R_3_6&gt; &lt;R_3_7&gt; &lt;R_3_8&gt; &lt;R_3_9&gt; &lt;R_3_10&gt; &lt;R_3_11&gt; &lt;R_3_12&gt; &lt;R_3_13&gt; &lt;R_3_14&gt; &lt;R_3_15&gt; &lt;R_3_16&gt; &lt;R_3_17&gt; &lt;R_3_18&gt; &lt;R_3_19&gt; &lt;R_3_20&gt; &lt;R_3_21&gt; &lt;R_3_22&gt; &lt;R_3_23&gt; &lt;R_3_24&gt; &lt;R_3_25&gt; &lt;R_3_26&gt; &lt;R_3_27&gt; &lt;R_3_28&gt; &lt;R_3_29&gt; &lt;R_3_30&gt; &lt;R_3_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_13_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_13_2&gt; &lt;R_13_3&gt; &lt;R_13_4&gt; &lt;R_13_5&gt; &lt;R_13_6&gt; &lt;R_13_7&gt; &lt;R_13_8&gt; &lt;R_13_9&gt; &lt;R_13_10&gt; &lt;R_13_11&gt; &lt;R_13_12&gt; &lt;R_13_13&gt; &lt;R_13_14&gt; &lt;R_13_15&gt; &lt;R_13_16&gt; &lt;R_13_17&gt; &lt;R_13_18&gt; &lt;R_13_19&gt; &lt;R_13_20&gt; &lt;R_13_21&gt; &lt;R_13_22&gt; &lt;R_13_23&gt; &lt;R_13_24&gt; &lt;R_13_25&gt; &lt;R_13_26&gt; &lt;R_13_27&gt; &lt;R_13_28&gt; &lt;R_13_29&gt; &lt;R_13_30&gt; &lt;R_13_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_6_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_6_2&gt; &lt;R_6_3&gt; &lt;R_6_4&gt; &lt;R_6_5&gt; &lt;R_6_6&gt; &lt;R_6_7&gt; &lt;R_6_8&gt; &lt;R_6_9&gt; &lt;R_6_10&gt; &lt;R_6_11&gt; &lt;R_6_12&gt; &lt;R_6_13&gt; &lt;R_6_14&gt; &lt;R_6_15&gt; &lt;R_6_16&gt; &lt;R_6_17&gt; &lt;R_6_18&gt; &lt;R_6_19&gt; &lt;R_6_20&gt; &lt;R_6_21&gt; &lt;R_6_22&gt; &lt;R_6_23&gt; &lt;R_6_24&gt; &lt;R_6_25&gt; &lt;R_6_26&gt; &lt;R_6_27&gt; &lt;R_6_28&gt; &lt;R_6_29&gt; &lt;R_6_30&gt; &lt;R_6_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_2_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_2_2&gt; &lt;R_2_3&gt; &lt;R_2_4&gt; &lt;R_2_5&gt; &lt;R_2_6&gt; &lt;R_2_7&gt; &lt;R_2_8&gt; &lt;R_2_9&gt; &lt;R_2_10&gt; &lt;R_2_11&gt; &lt;R_2_12&gt; &lt;R_2_13&gt; &lt;R_2_14&gt; &lt;R_2_15&gt; &lt;R_2_16&gt; &lt;R_2_17&gt; &lt;R_2_18&gt; &lt;R_2_19&gt; &lt;R_2_20&gt; &lt;R_2_21&gt; &lt;R_2_22&gt; &lt;R_2_23&gt; &lt;R_2_24&gt; &lt;R_2_25&gt; &lt;R_2_26&gt; &lt;R_2_27&gt; &lt;R_2_28&gt; &lt;R_2_29&gt; &lt;R_2_30&gt; &lt;R_2_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_16_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_16_2&gt; &lt;R_16_3&gt; &lt;R_16_4&gt; &lt;R_16_5&gt; &lt;R_16_6&gt; &lt;R_16_7&gt; &lt;R_16_8&gt; &lt;R_16_9&gt; &lt;R_16_10&gt; &lt;R_16_11&gt; &lt;R_16_12&gt; &lt;R_16_13&gt; &lt;R_16_14&gt; &lt;R_16_15&gt; &lt;R_16_16&gt; &lt;R_16_17&gt; &lt;R_16_18&gt; &lt;R_16_19&gt; &lt;R_16_20&gt; &lt;R_16_21&gt; &lt;R_16_22&gt; &lt;R_16_23&gt; &lt;R_16_24&gt; &lt;R_16_25&gt; &lt;R_16_26&gt; &lt;R_16_27&gt; &lt;R_16_28&gt; &lt;R_16_29&gt; &lt;R_16_30&gt; &lt;R_16_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_21_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_21_2&gt; &lt;R_21_3&gt; &lt;R_21_4&gt; &lt;R_21_5&gt; &lt;R_21_6&gt; &lt;R_21_7&gt; &lt;R_21_8&gt; &lt;R_21_9&gt; &lt;R_21_10&gt; &lt;R_21_11&gt; &lt;R_21_12&gt; &lt;R_21_13&gt; &lt;R_21_14&gt; &lt;R_21_15&gt; &lt;R_21_16&gt; &lt;R_21_17&gt; &lt;R_21_18&gt; &lt;R_21_19&gt; &lt;R_21_20&gt; &lt;R_21_21&gt; &lt;R_21_22&gt; &lt;R_21_23&gt; &lt;R_21_24&gt; &lt;R_21_25&gt; &lt;R_21_26&gt; &lt;R_21_27&gt; &lt;R_21_28&gt; &lt;R_21_29&gt; &lt;R_21_30&gt; &lt;R_21_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_29_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_29_2&gt; &lt;R_29_3&gt; &lt;R_29_4&gt; &lt;R_29_5&gt; &lt;R_29_6&gt; &lt;R_29_7&gt; &lt;R_29_8&gt; &lt;R_29_9&gt; &lt;R_29_10&gt; &lt;R_29_11&gt; &lt;R_29_12&gt; &lt;R_29_13&gt; &lt;R_29_14&gt; &lt;R_29_15&gt; &lt;R_29_16&gt; &lt;R_29_17&gt; &lt;R_29_18&gt; &lt;R_29_19&gt; &lt;R_29_20&gt; &lt;R_29_21&gt; &lt;R_29_22&gt; &lt;R_29_23&gt; &lt;R_29_24&gt; &lt;R_29_25&gt; &lt;R_29_26&gt; &lt;R_29_27&gt; &lt;R_29_28&gt; &lt;R_29_29&gt; &lt;R_29_30&gt; &lt;R_29_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_5_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_5_2&gt; &lt;R_5_3&gt; &lt;R_5_4&gt; &lt;R_5_5&gt; &lt;R_5_6&gt; &lt;R_5_7&gt; &lt;R_5_8&gt; &lt;R_5_9&gt; &lt;R_5_10&gt; &lt;R_5_11&gt; &lt;R_5_12&gt; &lt;R_5_13&gt; &lt;R_5_14&gt; &lt;R_5_15&gt; &lt;R_5_16&gt; &lt;R_5_17&gt; &lt;R_5_18&gt; &lt;R_5_19&gt; &lt;R_5_20&gt; &lt;R_5_21&gt; &lt;R_5_22&gt; &lt;R_5_23&gt; &lt;R_5_24&gt; &lt;R_5_25&gt; &lt;R_5_26&gt; &lt;R_5_27&gt; &lt;R_5_28&gt; &lt;R_5_29&gt; &lt;R_5_30&gt; &lt;R_5_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_15_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_15_2&gt; &lt;R_15_3&gt; &lt;R_15_4&gt; &lt;R_15_5&gt; &lt;R_15_6&gt; &lt;R_15_7&gt; &lt;R_15_8&gt; &lt;R_15_9&gt; &lt;R_15_10&gt; &lt;R_15_11&gt; &lt;R_15_12&gt; &lt;R_15_13&gt; &lt;R_15_14&gt; &lt;R_15_15&gt; &lt;R_15_16&gt; &lt;R_15_17&gt; &lt;R_15_18&gt; &lt;R_15_19&gt; &lt;R_15_20&gt; &lt;R_15_21&gt; &lt;R_15_22&gt; &lt;R_15_23&gt; &lt;R_15_24&gt; &lt;R_15_25&gt; &lt;R_15_26&gt; &lt;R_15_27&gt; &lt;R_15_28&gt; &lt;R_15_29&gt; &lt;R_15_30&gt; &lt;R_15_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_20_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_20_2&gt; &lt;R_20_3&gt; &lt;R_20_4&gt; &lt;R_20_5&gt; &lt;R_20_6&gt; &lt;R_20_7&gt; &lt;R_20_8&gt; &lt;R_20_9&gt; &lt;R_20_10&gt; &lt;R_20_11&gt; &lt;R_20_12&gt; &lt;R_20_13&gt; &lt;R_20_14&gt; &lt;R_20_15&gt; &lt;R_20_16&gt; &lt;R_20_17&gt; &lt;R_20_18&gt; &lt;R_20_19&gt; &lt;R_20_20&gt; &lt;R_20_21&gt; &lt;R_20_22&gt; &lt;R_20_23&gt; &lt;R_20_24&gt; &lt;R_20_25&gt; &lt;R_20_26&gt; &lt;R_20_27&gt; &lt;R_20_28&gt; &lt;R_20_29&gt; &lt;R_20_30&gt; &lt;R_20_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_8_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_8_2&gt; &lt;R_8_3&gt; &lt;R_8_4&gt; &lt;R_8_5&gt; &lt;R_8_6&gt; &lt;R_8_7&gt; &lt;R_8_8&gt; &lt;R_8_9&gt; &lt;R_8_10&gt; &lt;R_8_11&gt; &lt;R_8_12&gt; &lt;R_8_13&gt; &lt;R_8_14&gt; &lt;R_8_15&gt; &lt;R_8_16&gt; &lt;R_8_17&gt; &lt;R_8_18&gt; &lt;R_8_19&gt; &lt;R_8_20&gt; &lt;R_8_21&gt; &lt;R_8_22&gt; &lt;R_8_23&gt; &lt;R_8_24&gt; &lt;R_8_25&gt; &lt;R_8_26&gt; &lt;R_8_27&gt; &lt;R_8_28&gt; &lt;R_8_29&gt; &lt;R_8_30&gt; &lt;R_8_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_18_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_18_2&gt; &lt;R_18_3&gt; &lt;R_18_4&gt; &lt;R_18_5&gt; &lt;R_18_6&gt; &lt;R_18_7&gt; &lt;R_18_8&gt; &lt;R_18_9&gt; &lt;R_18_10&gt; &lt;R_18_11&gt; &lt;R_18_12&gt; &lt;R_18_13&gt; &lt;R_18_14&gt; &lt;R_18_15&gt; &lt;R_18_16&gt; &lt;R_18_17&gt; &lt;R_18_18&gt; &lt;R_18_19&gt; &lt;R_18_20&gt; &lt;R_18_21&gt; &lt;R_18_22&gt; &lt;R_18_23&gt; &lt;R_18_24&gt; &lt;R_18_25&gt; &lt;R_18_26&gt; &lt;R_18_27&gt; &lt;R_18_28&gt; &lt;R_18_29&gt; &lt;R_18_30&gt; &lt;R_18_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_23_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_23_2&gt; &lt;R_23_3&gt; &lt;R_23_4&gt; &lt;R_23_5&gt; &lt;R_23_6&gt; &lt;R_23_7&gt; &lt;R_23_8&gt; &lt;R_23_9&gt; &lt;R_23_10&gt; &lt;R_23_11&gt; &lt;R_23_12&gt; &lt;R_23_13&gt; &lt;R_23_14&gt; &lt;R_23_15&gt; &lt;R_23_16&gt; &lt;R_23_17&gt; &lt;R_23_18&gt; &lt;R_23_19&gt; &lt;R_23_20&gt; &lt;R_23_21&gt; &lt;R_23_22&gt; &lt;R_23_23&gt; &lt;R_23_24&gt; &lt;R_23_25&gt; &lt;R_23_26&gt; &lt;R_23_27&gt; &lt;R_23_28&gt; &lt;R_23_29&gt; &lt;R_23_30&gt; &lt;R_23_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_7_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_7_2&gt; &lt;R_7_3&gt; &lt;R_7_4&gt; &lt;R_7_5&gt; &lt;R_7_6&gt; &lt;R_7_7&gt; &lt;R_7_8&gt; &lt;R_7_9&gt; &lt;R_7_10&gt; &lt;R_7_11&gt; &lt;R_7_12&gt; &lt;R_7_13&gt; &lt;R_7_14&gt; &lt;R_7_15&gt; &lt;R_7_16&gt; &lt;R_7_17&gt; &lt;R_7_18&gt; &lt;R_7_19&gt; &lt;R_7_20&gt; &lt;R_7_21&gt; &lt;R_7_22&gt; &lt;R_7_23&gt; &lt;R_7_24&gt; &lt;R_7_25&gt; &lt;R_7_26&gt; &lt;R_7_27&gt; &lt;R_7_28&gt; &lt;R_7_29&gt; &lt;R_7_30&gt; &lt;R_7_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_26_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_26_2&gt; &lt;R_26_3&gt; &lt;R_26_4&gt; &lt;R_26_5&gt; &lt;R_26_6&gt; &lt;R_26_7&gt; &lt;R_26_8&gt; &lt;R_26_9&gt; &lt;R_26_10&gt; &lt;R_26_11&gt; &lt;R_26_12&gt; &lt;R_26_13&gt; &lt;R_26_14&gt; &lt;R_26_15&gt; &lt;R_26_16&gt; &lt;R_26_17&gt; &lt;R_26_18&gt; &lt;R_26_19&gt; &lt;R_26_20&gt; &lt;R_26_21&gt; &lt;R_26_22&gt; &lt;R_26_23&gt; &lt;R_26_24&gt; &lt;R_26_25&gt; &lt;R_26_26&gt; &lt;R_26_27&gt; &lt;R_26_28&gt; &lt;R_26_29&gt; &lt;R_26_30&gt; &lt;R_26_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_31_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_31_2&gt; &lt;R_31_3&gt; &lt;R_31_4&gt; &lt;R_31_5&gt; &lt;R_31_6&gt; &lt;R_31_7&gt; &lt;R_31_8&gt; &lt;R_31_9&gt; &lt;R_31_10&gt; &lt;R_31_11&gt; &lt;R_31_12&gt; &lt;R_31_13&gt; &lt;R_31_14&gt; &lt;R_31_15&gt; &lt;R_31_16&gt; &lt;R_31_17&gt; &lt;R_31_18&gt; &lt;R_31_19&gt; &lt;R_31_20&gt; &lt;R_31_21&gt; &lt;R_31_22&gt; &lt;R_31_23&gt; &lt;R_31_24&gt; &lt;R_31_25&gt; &lt;R_31_26&gt; &lt;R_31_27&gt; &lt;R_31_28&gt; &lt;R_31_29&gt; &lt;R_31_30&gt; &lt;R_31_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_17_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_17_2&gt; &lt;R_17_3&gt; &lt;R_17_4&gt; &lt;R_17_5&gt; &lt;R_17_6&gt; &lt;R_17_7&gt; &lt;R_17_8&gt; &lt;R_17_9&gt; &lt;R_17_10&gt; &lt;R_17_11&gt; &lt;R_17_12&gt; &lt;R_17_13&gt; &lt;R_17_14&gt; &lt;R_17_15&gt; &lt;R_17_16&gt; &lt;R_17_17&gt; &lt;R_17_18&gt; &lt;R_17_19&gt; &lt;R_17_20&gt; &lt;R_17_21&gt; &lt;R_17_22&gt; &lt;R_17_23&gt; &lt;R_17_24&gt; &lt;R_17_25&gt; &lt;R_17_26&gt; &lt;R_17_27&gt; &lt;R_17_28&gt; &lt;R_17_29&gt; &lt;R_17_30&gt; &lt;R_17_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_22_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_22_2&gt; &lt;R_22_3&gt; &lt;R_22_4&gt; &lt;R_22_5&gt; &lt;R_22_6&gt; &lt;R_22_7&gt; &lt;R_22_8&gt; &lt;R_22_9&gt; &lt;R_22_10&gt; &lt;R_22_11&gt; &lt;R_22_12&gt; &lt;R_22_13&gt; &lt;R_22_14&gt; &lt;R_22_15&gt; &lt;R_22_16&gt; &lt;R_22_17&gt; &lt;R_22_18&gt; &lt;R_22_19&gt; &lt;R_22_20&gt; &lt;R_22_21&gt; &lt;R_22_22&gt; &lt;R_22_23&gt; &lt;R_22_24&gt; &lt;R_22_25&gt; &lt;R_22_26&gt; &lt;R_22_27&gt; &lt;R_22_28&gt; &lt;R_22_29&gt; &lt;R_22_30&gt; &lt;R_22_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_12_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_12_2&gt; &lt;R_12_3&gt; &lt;R_12_4&gt; &lt;R_12_5&gt; &lt;R_12_6&gt; &lt;R_12_7&gt; &lt;R_12_8&gt; &lt;R_12_9&gt; &lt;R_12_10&gt; &lt;R_12_11&gt; &lt;R_12_12&gt; &lt;R_12_13&gt; &lt;R_12_14&gt; &lt;R_12_15&gt; &lt;R_12_16&gt; &lt;R_12_17&gt; &lt;R_12_18&gt; &lt;R_12_19&gt; &lt;R_12_20&gt; &lt;R_12_21&gt; &lt;R_12_22&gt; &lt;R_12_23&gt; &lt;R_12_24&gt; &lt;R_12_25&gt; &lt;R_12_26&gt; &lt;R_12_27&gt; &lt;R_12_28&gt; &lt;R_12_29&gt; &lt;R_12_30&gt; &lt;R_12_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_25_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_25_2&gt; &lt;R_25_3&gt; &lt;R_25_4&gt; &lt;R_25_5&gt; &lt;R_25_6&gt; &lt;R_25_7&gt; &lt;R_25_8&gt; &lt;R_25_9&gt; &lt;R_25_10&gt; &lt;R_25_11&gt; &lt;R_25_12&gt; &lt;R_25_13&gt; &lt;R_25_14&gt; &lt;R_25_15&gt; &lt;R_25_16&gt; &lt;R_25_17&gt; &lt;R_25_18&gt; &lt;R_25_19&gt; &lt;R_25_20&gt; &lt;R_25_21&gt; &lt;R_25_22&gt; &lt;R_25_23&gt; &lt;R_25_24&gt; &lt;R_25_25&gt; &lt;R_25_26&gt; &lt;R_25_27&gt; &lt;R_25_28&gt; &lt;R_25_29&gt; &lt;R_25_30&gt; &lt;R_25_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_30_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_30_2&gt; &lt;R_30_3&gt; &lt;R_30_4&gt; &lt;R_30_5&gt; &lt;R_30_6&gt; &lt;R_30_7&gt; &lt;R_30_8&gt; &lt;R_30_9&gt; &lt;R_30_10&gt; &lt;R_30_11&gt; &lt;R_30_12&gt; &lt;R_30_13&gt; &lt;R_30_14&gt; &lt;R_30_15&gt; &lt;R_30_16&gt; &lt;R_30_17&gt; &lt;R_30_18&gt; &lt;R_30_19&gt; &lt;R_30_20&gt; &lt;R_30_21&gt; &lt;R_30_22&gt; &lt;R_30_23&gt; &lt;R_30_24&gt; &lt;R_30_25&gt; &lt;R_30_26&gt; &lt;R_30_27&gt; &lt;R_30_28&gt; &lt;R_30_29&gt; &lt;R_30_30&gt; &lt;R_30_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">R_1_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_FILE</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;R_1_2&gt; &lt;R_1_3&gt; &lt;R_1_4&gt; &lt;R_1_5&gt; &lt;R_1_6&gt; &lt;R_1_7&gt; &lt;R_1_8&gt; &lt;R_1_9&gt; &lt;R_1_10&gt; &lt;R_1_11&gt; &lt;R_1_12&gt; &lt;R_1_13&gt; &lt;R_1_14&gt; &lt;R_1_15&gt; &lt;R_1_16&gt; &lt;R_1_17&gt; &lt;R_1_18&gt; &lt;R_1_19&gt; &lt;R_1_20&gt; &lt;R_1_21&gt; &lt;R_1_22&gt; &lt;R_1_23&gt; &lt;R_1_24&gt; &lt;R_1_25&gt; &lt;R_1_26&gt; &lt;R_1_27&gt; &lt;R_1_28&gt; &lt;R_1_29&gt; &lt;R_1_30&gt; &lt;R_1_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">r1_dout_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">REG_OUT</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">61 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;r1_dout_2&gt; &lt;r1_dout_3&gt; &lt;r1_dout_4&gt; &lt;r1_dout_5&gt; &lt;r1_dout_6&gt; &lt;r1_dout_7&gt; &lt;r1_dout_8&gt; &lt;r1_dout_9&gt; &lt;r1_dout_10&gt; &lt;r1_dout_11&gt; &lt;r1_dout_12&gt; &lt;r1_dout_13&gt; &lt;r1_dout_14&gt; &lt;r1_dout_15&gt; &lt;r1_dout_16&gt; &lt;r1_dout_17&gt; &lt;r1_dout_18&gt; &lt;r1_dout_19&gt; &lt;r1_dout_20&gt; &lt;r1_dout_21&gt; &lt;r1_dout_22&gt; &lt;r1_dout_23&gt; &lt;r1_dout_24&gt; &lt;r1_dout_25&gt; &lt;r1_dout_26&gt; &lt;r1_dout_27&gt; &lt;r1_dout_28&gt; &lt;r1_dout_29&gt; &lt;r1_dout_30&gt; &lt;r1_dout_31&gt; &lt;r2_dout_1&gt; &lt;r2_dout_2&gt; &lt;r2_dout_3&gt; &lt;r2_dout_4&gt; &lt;r2_dout_5&gt; &lt;r2_dout_6&gt; &lt;r2_dout_7&gt; &lt;r2_dout_8&gt; &lt;r2_dout_9&gt; &lt;r2_dout_10&gt; &lt;r2_dout_11&gt; &lt;r2_dout_12&gt; &lt;r2_dout_13&gt; &lt;r2_dout_14&gt; &lt;r2_dout_15&gt; &lt;r2_dout_16&gt; &lt;r2_dout_17&gt; &lt;r2_dout_18&gt; &lt;r2_dout_19&gt; &lt;r2_dout_20&gt; &lt;r2_dout_21&gt; &lt;r2_dout_22&gt; &lt;r2_dout_23&gt; &lt;r2_dout_24&gt; &lt;r2_dout_25&gt; &lt;r2_dout_26&gt; &lt;r2_dout_27&gt; &lt;r2_dout_28&gt; &lt;r2_dout_29&gt; &lt;r2_dout_30&gt; &lt;r2_dout_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">alu_out_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">ALU_RESULT_REG</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">30 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;alu_out_2&gt; &lt;alu_out_3&gt; &lt;alu_out_4&gt; &lt;alu_out_5&gt; &lt;alu_out_6&gt; &lt;alu_out_7&gt; &lt;alu_out_8&gt; &lt;alu_out_9&gt; &lt;alu_out_10&gt; &lt;alu_out_11&gt; &lt;alu_out_12&gt; &lt;alu_out_13&gt; &lt;alu_out_14&gt; &lt;alu_out_15&gt; &lt;alu_out_16&gt; &lt;alu_out_17&gt; &lt;alu_out_18&gt; &lt;alu_out_19&gt; &lt;alu_out_20&gt; &lt;alu_out_21&gt; &lt;alu_out_22&gt; &lt;alu_out_23&gt; &lt;alu_out_24&gt; &lt;alu_out_25&gt; &lt;alu_out_26&gt; &lt;alu_out_27&gt; &lt;alu_out_28&gt; &lt;alu_out_29&gt; &lt;alu_out_30&gt; &lt;alu_out_31&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">next_state_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">CONTROL</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;next_state_5&gt; &lt;next_state_6&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">PC_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PCModule</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">instruction_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">State_Reg</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">data_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">State_Reg</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">R_16_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_19_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_19_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_17_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_17_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_18_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_18_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_20_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_20_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_21_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_21_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_22_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_22_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_23_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_23_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_24_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_24_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_25_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_25_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_26_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_26_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_27_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_27_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_28_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_28_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_29_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_29_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_30_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_30_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_31_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_31_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_2_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_2_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_0_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_1_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_3_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_3_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_4_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_4_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_5_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_5_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_6_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_6_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_7_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_7_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_8_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_8_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_9_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_9_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_10_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_10_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_11_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_11_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_12_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_12_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_13_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_13_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_14_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_14_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_15_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_15_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">R_16_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_FILE</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">r1_dout_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">REG_OUT</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU_RESULT_REG</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">next_state_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">CONTROL</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_16</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_12</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_8</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_out_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ALU</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1294" delta="old" >Latch &lt;<arg fmt="%s" index="1">alu_out_0</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">ALU</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">state_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">CONTROL</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">state_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">CONTROL</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">state_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">CONTROL</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">InstrData/data_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">InstrData/instruction_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">RegFile/R_1_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">FSM/Branch_ne</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">FSM/Branch_gz</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/ALU_SrcB_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/IR_Write</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/IorD</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/PC_Src_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/ALUOp_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/ALUOp_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/RegDst</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">FSM/Branch</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">reg_out/r2_dout_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg_out/r1_dout_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2169" delta="old" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

